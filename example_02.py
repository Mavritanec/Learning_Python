# импорт класса SomeClass1 из модуля example_01
# инструкции под if __name__ == '__main__' выполнены не будут
# это улучшает структуру программы и позволяет разрабатывать программу командно
# т.е. разные люди одновременно разрабатывают свои модули программы
import example_01


class SomeClass2:
    # это специальный метод, в Python называется магическим,
    # т.к., по соглашению, имеет вид __method__ (нижние подчеркивания)
    # такие методы вызываются при определенных событиях
    # конкретно этот метод вызывается при создании экземпляра класса / инициализации объекта
    # и он настолько часто используется, что имеет собственное название:
    # конструктор класса (т.к. "конструирует класс")
    def __init__(self, var_1, var_2):
        # инициализируем нужные атрибуты
        # это динамические атрибуты класса, определяются при его объявлении
        self.variable_1 = var_1
        self.variable_2 = var_2
        self.sum_variables = str(var_1) + str(var_2)

    # x + y вызывает x.__add__(y)
    # переопределение методов еще называют перегрузкой
    # так метод __init__ перегружает конструктор класса,
    # а нижеприведенный метод перегружает оператор сложения
    # правда IDE этого не показывает и поэтому, скорее всего, этот метод и не был определен, т.е. перегрузки нет
    def __add__(self, other):
        pass

    # метод строкового представления экземпляра класса
    # var = Class()
    # print(var) - будет вызван метод __str__
    # есть также метод __repr__, оба метода похожи
    # есть функции str() и repr()
    # кружок слева в IDE это и есть перегрузка
    def __str__(self):
        pass


if __name__ == '__main__':
    object_1 = SomeClass2('content_1', 'content_2')
    print(object_1.variable_1, object_1.variable_2)
    print(object_1.sum_variables)

    # т.к. есть импорт
    object_2 = example_01.SomeClass()
    object_2.some_func()
    # чтобы каждый раз не обращаться к модулю по имени, можно импортировать все:
    # from example_01 import * (звездочка в Python это оператор распаковки)
    # но, это плохой стиль, чтобы импортировать что-то конкретное:
    # from example_01 import SomeClass (без кавычек в конце)
    # если объектов для импорта много, то
    # import example_01 as ex
    # и тогда к модулю можно обращаться по имени ex
